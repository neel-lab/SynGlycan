classdef CrossRing
    % CROSSRING: An object storing the properties of monosaccharide
    %            cross-ring fragmentations
    %    
    %   Syntax:
    %       monoMass = CrossRing.glycanMSMap(mono1let) 
    %       monoFormula = CrossRing.glycanformulaMap(mono1let) 
    %
    %   Input:
    %       mono1let: single-letter code for the monosaccharide
    %       
    %   Output;
    %       monoMass:  monosaccharide mass
    %       monoFormula: monosaccharide formula
    %    
    %   Examples:
    %       hexMass    = CrossRing.glycanMSMap('h')
    %       hexFormula = CrossRing.glycanformulaMap('h')
    %                      
    %   Note:                    Glycan table:
    %                          __________________
    %                             code  |  type
    %                          __________________
    %                              A02  | 
    %                              A03  | 
    %                              A05  | 
    %                              A13  | 
    %                              A14  | 
    %                              A15  | 
    %                              A24  | 
    %                              A25  | 
    %                              A35  | 
    %                         __________________
    %
    %See also Glycan, Anomeric
    
    %Author: Gabrielle Chapman
    %Date Lastly Updated: 9/15/2021
    
      properties (Constant)
             Hex         = struct('C',6,'H',10,'O',5);
             HexNAC      = struct('C',8,'H',13,'O',5,'N',1);
             Fuc         = struct('C',6,'H',10,'O',4);
             NeuAC       = struct('C',11,'H',17,'O',8,'N',1);
             
            glyfullname = {'Hex','HexNAc','NeuAc','Fuc'};
                       
            gly1let     = {'h','n','s','f'};
                        
            glyformula = { struct('C',6,'H',10,'O',5),...
                           struct('C',8,'H',13,'O',5,'N',1),...
                           struct('C',11,'H',17,'O',8,'N',1),...
                           struct('C',6,'H',10,'O',4)};
            
            A02comp = containers.Map({'h','n','s','f'},...
                          {struct('C',4,'H',8,'O',4),...
                           struct('C',4,'H',8,'O',4),...
                           struct('C',8,'H',15,'O',6,'N',1),...
                           struct('C',4,'H',8,'O',3)});
                       
            A03comp = containers.Map({'h','n','s','f'},...
                          {struct('C',3,'H',6,'O',3),...
                           struct('C',3,'H',6,'O',3),...
                           struct('C',7,'H',13,'O',5,'N',1),...
                           struct('C',3,'H',6,'O',2)});
                       
            A04comp = containers.Map({'h','n','s','f'},...
                          {struct('C',2,'H',4,'O',2),...
                           struct('C',2,'H',4,'O',2),...
                           struct('C',4,'H',8,'O',4),...
                           struct('C',2,'H',4,'O',1)});
                       
            A13comp = containers.Map({'h','n','s','f'},...
                          {struct('C',2,'H',4,'O',2),...
                           struct('C',4,'H',7,'O',2,'N',1),...
                           struct('C',2,'H',4,'O',1),...
                           struct('C',2,'H',4,'O',2)});
                       
            A14comp = containers.Map({'h','n','s','f'},...
                          {struct('C',3,'H',6,'O',3),...
                           struct('C',5,'H',9,'O',3,'N',1),...
                           struct('C',5,'H',9,'O',2,'N',1),...
                           struct('C',3,'H',6,'O',3)});
                       
            A15comp = containers.Map({'h','n','s','f'},...
                          {struct('C',5,'H',10,'O',4),...
                           struct('C',7,'H',13,'O',4,'N',1),...
                           struct('C',9,'H',17,'O',5,'N',1),...
                           struct('C',5,'H',10,'O',3)});
                       
            A24comp = containers.Map({'h','n','s','f'},...
                          {struct('C',2,'H',4,'O',2),...
                           struct('C',2,'H',4,'O',2),...
                           struct('C',4,'H',7,'O',2,'N',1),...
                           struct('C',2,'H',4,'O',2)});
                       
            A25comp = containers.Map({'h','n','s','f'},...
                          {struct('C',4,'H',8,'O',3),...
                           struct('C',4,'H',8,'O',3),...
                           struct('C',8,'H',15,'O',5,'N',1),...
                           struct('C',4,'H',8,'O',2)});
                       
            A35comp = containers.Map({'h','n','s','f'},...
                          {struct('C',3,'H',6,'O',2),...
                           struct('C',3,'H',6,'O',2),...
                           struct('C',7,'H',13,'O',4,'N',1),...
                           struct('C',3,'H',6,'O',1)});
                       
            A02 = containers.Map({'h','n','s','f'},...
                          {120.0422532,120.0422532,221.0899274,104.0473391});
                       
            A03 = containers.Map({'h','n','s','f'},...
                          {90.0316899,90.0316899,191.0793641,74.0367758});
                       
            A04 = containers.Map({'h','n','s','f'},...
                          {60.0211266,60.0211266,120.0422532,44.0262125});
                       
            A13 = containers.Map({'h','n','s','f'},...
                          {60.0211266,101.0476742,44.0262125,60.0211266});
                       
            A14 = containers.Map({'h','n','s','f'},...
                          {90.0316899,131.0582375,115.0633234,74.0367758});
                       
            A15 = containers.Map({'h','n','s','f'},...
                          {134.0579024,175.08445,219.1106625,118.0629883});
                       
            A24 = containers.Map({'h','n','s','f'},...
                          {60.0211266,60.0211266,101.0476742,60.0211266});
                       
            A25 = containers.Map({'h','n','s','f'},...
                          {104.0473391,104.0473391,205.0950133,88.052425});
                       
            A35 = containers.Map({'h','n','s','f'},...
                          {74.0367758,74.0367758,175.08445,58.0418617});
      end
end